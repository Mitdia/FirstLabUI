<Window x:Class="WpfFirstLabUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:local="clr-namespace:WpfFirstLabUI"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="1200">
    <Window.Resources>
        <local:ValidationErrorsConverter x:Key="ValidationErrorsConverter"/>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                            Path=(Validation.Errors),
                            Converter={StaticResource ValidationErrorsConverter}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <local:StringToDoubleArrayConverter x:Key="StringToDoubleArrayConverter" />
        <local:IsNonuniformToBoolConverter x:Key="IsNonuniformToBoolConverter" />
        <local:DoubleToStringConverter x:Key="DoubleToStringConverter" />
        <local:IsNumericConverter x:Key="IsNumericConverter"/>
        <DataTemplate x:Key="splineDataItemTemplate">
            <StackPanel Margin="5, 5, 5, 5">
                <TextBlock Text="Spline data item:"/>
                <TextBlock>
                    <Run Text="- coordinate: "/>
                    <Run Text="{Binding PointCoordinate, Converter={StaticResource DoubleToStringConverter}}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="- spline value: "/>
                    <Run Text="{Binding SplineValue, Converter={StaticResource DoubleToStringConverter}}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="- first derivative value: "/>
                    <Run Text="{Binding FirstDerivativeValue, Converter={StaticResource DoubleToStringConverter}}"/>
                </TextBlock>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="rawDataItemTemplate">
            <StackPanel Margin="5, 5, 5, 5">
                <TextBlock Text="Raw data item:"/>
                <TextBlock>
                    <Run Text="- coordinate: "/>
                    <Run Text="{Binding Coordinate, Converter={StaticResource DoubleToStringConverter}}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="- force value: "/>
                    <Run Text="{Binding Force, Converter={StaticResource DoubleToStringConverter}}"/>
                </TextBlock>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="20*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid Name="inputGrid" Grid.Column="0" Margin="0,30,0,0" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>

            <TextBox x:Name="segmentEndsInput"
                     HorizontalAlignment="Center" VerticalAlignment="Top" 
                     Grid.Row="1" Margin="110,50,0,0" TextWrapping="Wrap" 
                     Text="{Binding SegmentEnds,
                                    Converter={StaticResource StringToDoubleArrayConverter},
                                    ValidatesOnDataErrors=True,
                                    NotifyOnValidationError=True,
                                    Mode=TwoWay}" 
                     Width="100" Height="20" 
                     />

            <TextBox x:Name="numberOfInitialPointsInput"
                     HorizontalAlignment="Center" VerticalAlignment="Top" 
                     Grid.Row="1" Margin="40,80,0,0" TextWrapping="Wrap"
                     Text="{Binding NumberOfInitialPoints,
                                    Converter={StaticResource IsNumericConverter},
                                    ValidatesOnDataErrors=True,
                                    NotifyOnValidationError=True,
                                    UpdateSourceTrigger=PropertyChanged,
                                    Mode=TwoWay}" 
                     Width="30" Height="20"/>

            <RadioButton x:Name="isUniformButton" Content="Uniform Grid"
                         IsChecked="{Binding IsGridUniform}"
                         HorizontalAlignment="Left" VerticalAlignment="Top"
                         Grid.Row="1" Margin="90,120,0,0" 
                         Width="90" Height="20"/>

            <RadioButton x:Name="isNonuniformButton"
                         Content="Nonuniform Grid" 
                         IsChecked="{Binding IsGridUniform,
                                             Converter={StaticResource IsNonuniformToBoolConverter},
                                             Mode=TwoWay}"
                         HorizontalAlignment="Left" VerticalAlignment="Top"
                         Grid.Row="1" Margin="200,120,0,0" 
                         Height="20" Width="110"/>

            <ComboBox x:Name="forceInput"
                      SelectedItem="{Binding ForceName}"
                      ItemsSource="{Binding ForceTypes}"
                      HorizontalAlignment="Center" VerticalAlignment="Top"
                      Grid.Row="1" Margin="0,160,0,0" 
                      Width="120" Height="22"/>

            <TextBox x:Name="numberOfSplinePointsInput"
                     HorizontalAlignment="Left" VerticalAlignment="Top"
                     Margin="220,70,0,0" TextWrapping="Wrap"
                     Text="{Binding NumberOfPoints,
                                    Converter={StaticResource IsNumericConverter},
                                    ValidatesOnDataErrors=True, 
                                    NotifyOnValidationError=True, 
                                    UpdateSourceTrigger=PropertyChanged,
                                    Mode=TwoWay}"
                     Width="100" Height="20"/>

            <TextBox x:Name="derivativeOnLeftSide"
                     HorizontalAlignment="Left" VerticalAlignment="Top"
                     Margin="130,112,0,0"  TextWrapping="Wrap" 
                     Width="30" Height="20"
                     Text="{Binding FirstDerivativeOnLeftSegmentEnd}"/>

            <TextBox x:Name="derivativeOnRightSide"
                     HorizontalAlignment="Left" Margin="305,112,0,0"  TextWrapping="Wrap" VerticalAlignment="Top"
                     Width="30" Height="20"
                     Text="{Binding FirstDerivativeOnRightSegmentEnd}"/>

            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top"
                       Margin="0,30,0,0"  TextWrapping="Wrap"  
                       Text="Spline data input" 
                       Height="20" Width="200" 
                       TextAlignment="Center" FontSize="15" FontWeight="Bold"/>

            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top" 
                       Margin="0,15,0,0" Grid.Row="1" TextWrapping="Wrap"
                       Text="Raw data input"
                       Height="20" Width="200" 
                       TextAlignment="Center" FontSize="15" FontWeight="Bold"/>

            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" 
                       Margin="50,70,0,0" TextWrapping="Wrap" 
                       Text="Number of points in spline:" 
                       Height="20" Width="150"/>

            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top"
                       Margin="25,100,0,0" TextWrapping="Wrap" 
                       Text="First derivative value on left end:" 
                       Width="100" Height="32"/>

            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top"
                       Margin="200,100,0,0" TextWrapping="Wrap"
                       Text="First derivative value on right end:" 
                       Width="100" Height="32"/>

            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top"
                       Margin="0,50,80,0" Grid.Row="1" TextWrapping="Wrap" 
                       Text="Segment ends:" 
                       Width="80" Height="20"/>

            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top" 
                       Margin="0,80,130,0" Grid.Row="1" TextWrapping="Wrap" 
                       Text="Number of initial points:" 
                       Height="20" Width="130"/>
        </Grid>

        <ListBox x:Name="rawDataListBox" 
                 Grid.Column="1" Grid.Row="1" Margin="10,80,0,0" 
                 HorizontalAlignment="Left" VerticalAlignment="Top" 
                 Width="140" Height="160" 
                 ItemTemplate="{StaticResource rawDataItemTemplate}"
                 ItemsSource="{Binding ForceValues}"/>

        <ListBox x:Name="splineDataListBox"
                 Grid.Column="1"  Grid.Row="1" Margin="170,80,0,0"  
                 HorizontalAlignment="Left" VerticalAlignment="Top" 
                 Width="205" Height="160" 
                 ItemTemplate="{StaticResource splineDataItemTemplate}"
                 ItemsSource="{Binding SplineValues}"/>

        <TextBlock Grid.Column="1" Grid.Row="1" Margin="170,245,0,0" 
                   TextWrapping="Wrap" 
                   HorizontalAlignment="Left" 
                   Text="{Binding ElementName=splineDataListBox, Path=SelectedItem}" 
                   VerticalAlignment="Top" 
                   Height="80" Width="205" />

        <TextBlock x:Name="integralOutput"
                   Grid.Column="1" Grid.Row="1" Margin="0,340,0,0" 
                   HorizontalAlignment="Center" VerticalAlignment="Top" 
                   TextWrapping="Wrap" 
                   Width="126" Height="20" >
            <Run Text="Integral value:"/>
            <Run Text="{Binding IntegralValue, Converter={StaticResource DoubleToStringConverter}}"/>
        </TextBlock>

        <lvc:CartesianChart x:Name="chart" Grid.Column="2" Margin="25,39,25,30" Grid.Row="1"></lvc:CartesianChart>

        <Button x:Name="executeFromFileButton" 
                Grid.Column="1" Grid.Row="1" Margin="0,10,0,0" 
                Content="Execute from file" 
                HorizontalAlignment="Center" VerticalAlignment="Top" 
                Height="30" Width="100" 
                Command="{Binding ExecuteFromFileCommand}"/>

        <Button x:Name="saveButton"
                Grid.Column="1" Grid.Row="1" Margin="0,10,250,0" 
                Content="Save" 
                HorizontalAlignment="Center" VerticalAlignment="Top" 
                Height="30" Width="100"  
                Command="{Binding SaveCommand}"/>

        <Button x:Name="executeFromControlsButton" 
                Grid.Column="1" Grid.Row="1" Margin="250,10,0,0" 
                Content="Execute from data" 
                HorizontalAlignment="Center" VerticalAlignment="Top" 
                Height="30" Width="100" 
                Command="{Binding ExecuteFromDataCommand}" />

        <Menu>
            <MenuItem Header="Save" Command="{Binding SaveCommand}"/>
            <MenuItem Header="Execute">
                <MenuItem Header="Execute from file" Command="{Binding ExecuteFromFileCommand}"/>
                <MenuItem Header="Execute from data" Command="{Binding ExecuteFromDataCommand}"/>
            </MenuItem>
        </Menu>
    </Grid>
</Window>
